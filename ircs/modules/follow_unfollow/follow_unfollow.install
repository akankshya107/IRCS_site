<?php

/**
 * @file
 * Maintained table for follow and unfollow statistics data.
 */

 /**
  * Implements hook_schema() for follow_unfollow_schema().
  */
function follow_unfollow_schema() {
  $schema = [];

  $schema['follow_unfollow_statistics'] = [
    'description' => 'The base table for follow and unfollow statistics.',
    'fields' => [
      'fid' => [
        'description' => 'The primary identifier for a follow and unfollow statistics.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ],
      'nid' => [
        'description' => 'The node id of particular content type follow and unfollow.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ],
      'tid' => [
        'description' => 'The taxonomy id of particular taxonomy type follow and unfollow.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ],
      'uid' => [
        'description' => 'The user id of the user type follow and unfollow.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ],
      'author_uid' => [
        'description' => 'The user id of author doing operation.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ],
      'status' => [
        'description' => 'The status of this follow  and unfollow statistics.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ],
      'created' => [
        'description' => 'The Unix timestamp when the follow and unfollow was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ],
      'changed' => [
        'description' => 'The Unix timestamp when the follow and unfollow is most recently saved.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ],
    ],
    'indexes' => [
      'nid' => ['nid'],
      'tid' => ['tid'],
      'uid' => ['uid'],
      'author_uid' => ['author_uid'],
      'status' => ['status'],
    ],
    'primary key' => ['fid'],
  ];

  return $schema;
}

/**
 * Implements hook_uninstall().
 */
function follow_unfollow_uninstall() {
  // Delete Configuration.
  $config_factory = \Drupal::configFactory();
  $config_factory->getEditable('follow_unfollow.admin.settings')->delete();
}
